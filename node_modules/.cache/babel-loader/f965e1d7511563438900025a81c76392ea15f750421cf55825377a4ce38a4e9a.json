{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\micha\\\\OneDrive\\\\Documents\\\\Programming\\\\IAGL\\\\IAGL-Associate-Eng-Test\\\\src\\\\component\\\\TodoList.js\";\nimport React, { Component } from \"react\";\nimport Todo from \"./Todo\";\nimport { fetchTodos } from \"../actions\";\nimport { connect } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass TodoList extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {};\n  }\n  componentDidMount() {\n    this.props.fetchTodos().then(data);\n    console.log(\"fetch on mount\", data);\n  }\n  render() {\n    const {\n      todos\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"todo-list\",\n      children: todos && todos.length ? todos.map((todo, index) => {\n        return /*#__PURE__*/_jsxDEV(Todo, {\n          todo: todo.task\n        }, `todo-${index}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 18\n        }, this);\n      }) : \"No todos, yay!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this);\n  }\n}\nconst mapStateToProps = _ref => {\n  let {\n    data = {},\n    isLoadingData = false\n  } = _ref;\n  return {\n    data,\n    isLoadingData\n  };\n};\nexport default connect(mapStateToProps, {\n  fetchTodos\n})(TodoList);","map":{"version":3,"names":["React","Component","Todo","fetchTodos","connect","TodoList","state","componentDidMount","props","then","data","console","log","render","todos","length","map","todo","index","task","mapStateToProps","isLoadingData"],"sources":["C:/Users/micha/OneDrive/Documents/Programming/IAGL/IAGL-Associate-Eng-Test/src/component/TodoList.js"],"sourcesContent":["import React, {Component} from \"react\";\r\nimport Todo from \"./Todo\";\r\nimport {fetchTodos} from \"../actions\";\r\nimport {connect} from \"react-redux\";\r\n\r\nclass TodoList extends Component {\r\n  state = {};\r\n\r\n  componentDidMount() {\r\n    this.props.fetchTodos().then(data);\r\n    console.log(\"fetch on mount\", data)\r\n  }\r\n\r\n  render() {\r\n    const {todos} = this.props;\r\n    return (<ul className=\"todo-list\">\r\n      {todos && todos.length\r\n        ? todos.map((todo, index) => {\r\n          return <Todo key={`todo-${index}`} todo={todo.task}/>;\r\n        })\r\n        : \"No todos, yay!\"}\r\n    </ul>);\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({data = {}, isLoadingData = false}) => ({\r\n  data,\r\n  isLoadingData\r\n});\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    fetchTodos\r\n  }\r\n)(TodoList);"],"mappings":";AAAA,OAAOA,KAAK,IAAGC,SAAS,QAAO,OAAO;AACtC,OAAOC,IAAI,MAAM,QAAQ;AACzB,SAAQC,UAAU,QAAO,YAAY;AACrC,SAAQC,OAAO,QAAO,aAAa;AAAC;AAEpC,MAAMC,QAAQ,SAASJ,SAAS,CAAC;EAAA;IAAA;IAAA,KAC/BK,KAAK,GAAG,CAAC,CAAC;EAAA;EAEVC,iBAAiB,GAAG;IAClB,IAAI,CAACC,KAAK,CAACL,UAAU,EAAE,CAACM,IAAI,CAACC,IAAI,CAAC;IAClCC,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEF,IAAI,CAAC;EACrC;EAEAG,MAAM,GAAG;IACP,MAAM;MAACC;IAAK,CAAC,GAAG,IAAI,CAACN,KAAK;IAC1B,oBAAQ;MAAI,SAAS,EAAC,WAAW;MAAA,UAC9BM,KAAK,IAAIA,KAAK,CAACC,MAAM,GAClBD,KAAK,CAACE,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,KAAK;QAC3B,oBAAO,QAAC,IAAI;UAAuB,IAAI,EAAED,IAAI,CAACE;QAAK,GAAhC,QAAOD,KAAM,EAAC;UAAA;UAAA;UAAA;QAAA,QAAoB;MACvD,CAAC,CAAC,GACA;IAAgB;MAAA;MAAA;MAAA;IAAA,QACjB;EACP;AACF;AAEA,MAAME,eAAe,GAAG;EAAA,IAAC;IAACV,IAAI,GAAG,CAAC,CAAC;IAAEW,aAAa,GAAG;EAAK,CAAC;EAAA,OAAM;IAC/DX,IAAI;IACJW;EACF,CAAC;AAAA,CAAC;AACF,eAAejB,OAAO,CACpBgB,eAAe,EACf;EACEjB;AACF,CAAC,CACF,CAACE,QAAQ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}