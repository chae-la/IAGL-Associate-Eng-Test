{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\micha\\\\OneDrive\\\\Documents\\\\Programming\\\\IAGL\\\\IAGL-Associate-Eng-Test\\\\src\\\\component\\\\TodoList.js\";\nimport React, { Component, useState } from \"react\";\nimport Todo from \"./Todo\";\nimport { fetchTodos } from \"../actions\";\nimport { connect } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass TodoList extends Component {\n  componentDidMount() {\n    this.props.fetchTodos();\n  }\n  render() {\n    const {\n      todos\n    } = this.props.data;\n    return /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"todo-list\",\n      children: todos && todos.length ? todos.map((todo, index) => {\n        return /*#__PURE__*/_jsxDEV(Todo, {\n          todo: todo.task\n        }, `todo-${index}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 18\n        }, this);\n      }) : \"No todos, yay!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this);\n  }\n}\nconst [task, setTask] = useState([]);\nconst [taskInput, setTaskInput] = userSt;\nconst mapStateToProps = _ref => {\n  let {\n    data = {},\n    isLoadingData = false\n  } = _ref;\n  return {\n    data,\n    isLoadingData\n  };\n};\nexport default connect(mapStateToProps, {\n  fetchTodos\n})(TodoList);","map":{"version":3,"names":["React","Component","useState","Todo","fetchTodos","connect","TodoList","componentDidMount","props","render","todos","data","length","map","todo","index","task","setTask","taskInput","setTaskInput","userSt","mapStateToProps","isLoadingData"],"sources":["C:/Users/micha/OneDrive/Documents/Programming/IAGL/IAGL-Associate-Eng-Test/src/component/TodoList.js"],"sourcesContent":["import React, {Component, useState} from \"react\";\r\nimport Todo from \"./Todo\";\r\nimport {fetchTodos} from \"../actions\";\r\nimport {connect} from \"react-redux\";\r\n\r\nclass TodoList extends Component {\r\n  \r\n  componentDidMount() {\r\n    this.props.fetchTodos();\r\n  }\r\n  \r\n  render() {\r\n    const {todos} = this.props.data;\r\n    return (<ul className=\"todo-list\">\r\n      {todos && todos.length\r\n        ? todos.map((todo, index) => {\r\n          return <Todo key={`todo-${index}`} todo={todo.task}/>;\r\n        })\r\n        : \"No todos, yay!\"}\r\n    </ul>);\r\n  }\r\n}\r\nconst [task, setTask] = useState([]);\r\nconst [taskInput, setTaskInput] = userSt\r\n\r\nconst mapStateToProps = ({data = {}, isLoadingData = false}) => ({\r\n  data,\r\n  isLoadingData\r\n});\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    fetchTodos\r\n  }\r\n)(TodoList);"],"mappings":";AAAA,OAAOA,KAAK,IAAGC,SAAS,EAAEC,QAAQ,QAAO,OAAO;AAChD,OAAOC,IAAI,MAAM,QAAQ;AACzB,SAAQC,UAAU,QAAO,YAAY;AACrC,SAAQC,OAAO,QAAO,aAAa;AAAC;AAEpC,MAAMC,QAAQ,SAASL,SAAS,CAAC;EAE/BM,iBAAiB,GAAG;IAClB,IAAI,CAACC,KAAK,CAACJ,UAAU,EAAE;EACzB;EAEAK,MAAM,GAAG;IACP,MAAM;MAACC;IAAK,CAAC,GAAG,IAAI,CAACF,KAAK,CAACG,IAAI;IAC/B,oBAAQ;MAAI,SAAS,EAAC,WAAW;MAAA,UAC9BD,KAAK,IAAIA,KAAK,CAACE,MAAM,GAClBF,KAAK,CAACG,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,KAAK;QAC3B,oBAAO,QAAC,IAAI;UAAuB,IAAI,EAAED,IAAI,CAACE;QAAK,GAAhC,QAAOD,KAAM,EAAC;UAAA;UAAA;UAAA;QAAA,QAAoB;MACvD,CAAC,CAAC,GACA;IAAgB;MAAA;MAAA;MAAA;IAAA,QACjB;EACP;AACF;AACA,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;AACpC,MAAM,CAACgB,SAAS,EAAEC,YAAY,CAAC,GAAGC,MAAM;AAExC,MAAMC,eAAe,GAAG;EAAA,IAAC;IAACV,IAAI,GAAG,CAAC,CAAC;IAAEW,aAAa,GAAG;EAAK,CAAC;EAAA,OAAM;IAC/DX,IAAI;IACJW;EACF,CAAC;AAAA,CAAC;AACF,eAAejB,OAAO,CACpBgB,eAAe,EACf;EACEjB;AACF,CAAC,CACF,CAACE,QAAQ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}